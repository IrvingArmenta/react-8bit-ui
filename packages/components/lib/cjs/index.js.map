{"version":3,"file":"index.js","sources":["../../../tokens/build/tokens.ts","../../src/stitches.config.ts","../../src/Button.tsx","../../src/globalStyles.ts"],"sourcesContent":["const tokens = {\n  primary: 'rgb(32, 156, 238)',\n  success: 'rgb(146, 204, 65)',\n  warning: 'rgb(247, 213, 29)',\n  error: 'rgb(231, 110, 85)',\n  disabled: 'rgb(211, 211, 211)',\n  customEasing: 'cubic-bezier(0.645,  0.045,  0.355,  1.000)'\n};\nexport default tokens;\n","import { createStitches } from '@stitches/react';\nimport tokens from '@irubingu/react-8bit-tokens/build/tokens';\n\nexport const {\n  styled,\n  css,\n  globalCss,\n  keyframes,\n  getCssText,\n  theme,\n  createTheme,\n  config\n} = createStitches({\n  theme: {\n    colors: {\n      ...tokens\n    }\n  },\n  media: {\n    bp1: '(min-width: 480px)'\n  },\n  prefix: 'react8bit',\n  utils: {\n    marginX: (value: number) => ({ marginLeft: value, marginRight: value })\n  }\n});\n","import type { FC, HTMLAttributes } from 'react';\nimport { styled } from './stitches.config';\nimport tokens from '@irubingu/react-8bit-tokens/build/tokens';\nimport { darken } from 'polished';\n\nfunction typedObjectKeys<O extends Record<string, unknown>>(obj: O) {\n  const keys = Object.keys(obj);\n  return keys as (keyof O)[];\n}\n\nconst colorGet = () => {\n  const keysArr = typedObjectKeys(tokens).filter((t) => t !== 'customEasing');\n  const newObj = {} as Record<\n    keyof typeof tokens,\n    { backgroundColor: string; '&:hover': { backgroundColor: string } }\n  >;\n\n  for (const k of keysArr) {\n    console.log(tokens[k]);\n    newObj[k] = {\n      backgroundColor: `$${k}`,\n      '&:hover': {\n        backgroundColor: darken(0.3, tokens[k])\n      }\n    };\n  }\n\n  return newObj;\n};\n\nconst StyledButton = styled('button', {\n  backgroundColor: 'gainsboro',\n  borderRadius: '9999px',\n  fontSize: '14px',\n  padding: '10px 15px',\n  color: 'black',\n  '&:hover': {\n    backgroundColor: '$primary'\n  },\n  variants: {\n    color: {\n      ...colorGet()\n    }\n  }\n});\n\ntype React8bitUiButtonType = FC<\n  {\n    fontSize?: string;\n    color?: keyof typeof tokens;\n  } & HTMLAttributes<HTMLButtonElement>\n>;\n\nconst Button: React8bitUiButtonType = (props) => {\n  const { children, fontSize, color, ...rest } = props;\n\n  return (\n    <StyledButton color={color} {...rest} css={{ fontSize }}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import { globalCss } from './stitches.config';\n\nexport const globalReact8BitStylesObj = {\n  html: {\n    lineHeight: 1.15,\n    '-webkit-text-size-adjust': '100%',\n    '-webkit-tap-highlight-color': 'transparent'\n  },\n  body: {\n    margin: 0\n  },\n  '*, ::before, ::after': {\n    boxSizing: 'border-box',\n    borderStyle: 'solid',\n    borderWidth: 0\n  },\n  'button, input, optgroup, select, textarea': {\n    '-webkit-appearance': 'none',\n    appearance: 'none',\n    verticalAlign: 'middle',\n    color: 'inherit',\n    font: 'inherit',\n    background: 'transparent',\n    padding: 0,\n    margin: 0,\n    borderRadius: 0,\n    textAlign: 'inherit',\n    textTransform: 'inherit'\n  },\n  'button, [type=\"button\"], [type=\"reset\"], [type=\"submit\"]': {\n    cursor: 'pointer'\n  },\n  fieldset: {\n    margin: 0,\n    padding: 0,\n    minWidth: 0\n  },\n  table: {\n    borderColor: 'inherit',\n    borderCollapse: 'collapse'\n  },\n  caption: {\n    textAlign: 'left'\n  }\n};\n\nexport const globalReact8BitStyles = globalCss(globalReact8BitStylesObj);\n"],"names":["tokens","primary","success","warning","error","disabled","customEasing","styled","_a","createStitches","theme","colors","media","bp1","prefix","utils","marginX","value","marginLeft","marginRight","globalCss","StyledButton","backgroundColor","borderRadius","fontSize","padding","color","variants","obj","newObj","keysArr_1","Object","keys","filter","t","_i","k","console","log","darken","colorGet","globalReact8BitStylesObj","html","lineHeight","body","margin","boxSizing","borderStyle","borderWidth","appearance","verticalAlign","font","background","textAlign","textTransform","cursor","fieldset","minWidth","table","borderColor","borderCollapse","caption","globalReact8BitStyles","props","children","rest","_jsx","css"],"mappings":"0WAAA,MAAMA,EAAS,CACbC,QAAS,oBACTC,QAAS,oBACTC,QAAS,oBACTC,MAAO,oBACPC,SAAU,qBACVC,aAAc,+CCFdC,GADWC,EASTC,iBAAe,CACjBC,MAAO,CACLC,YACKX,IAGPY,MAAO,CACLC,IAAK,sBAEPC,OAAQ,YACRC,MAAO,CACLC,QAAS,SAACC,GAAkB,OAAGC,WAAYD,EAAOE,YAAaF,yBAjBjEG,sECIF,IAoBMC,EAAed,EAAO,SAAU,CACpCe,gBAAiB,YACjBC,aAAc,SACdC,SAAU,OACVC,QAAS,YACTC,MAAO,QACP,UAAW,CACTJ,gBAAiB,YAEnBK,SAAU,CACRD,WA9Ba,WAOf,IANA,IAN0DE,EAOpDC,EAAS,OAKCC,GAZ0CF,EAM1B5B,EALnB+B,OAAOC,KAAKJ,IAKeK,QAAO,SAACC,GAAM,MAAM,iBAANA,KAMtCC,WAAAA,IAAS,CAApB,IAAMC,OACTC,QAAQC,IAAItC,EAAOoC,IACnBP,EAAOO,GAAK,CACVd,gBAAiB,WAAIc,GACrB,UAAW,CACTd,gBAAiBiB,SAAO,GAAKvC,EAAOoC,MAK1C,OAAOP,EAcAW,OCvCIC,EAA2B,CACtCC,KAAM,CACJC,WAAY,KACZ,2BAA4B,OAC5B,8BAA+B,eAEjCC,KAAM,CACJC,OAAQ,GAEV,uBAAwB,CACtBC,UAAW,aACXC,YAAa,QACbC,YAAa,GAEf,4CAA6C,CAC3C,qBAAsB,OACtBC,WAAY,OACZC,cAAe,SACfxB,MAAO,UACPyB,KAAM,UACNC,WAAY,cACZ3B,QAAS,EACToB,OAAQ,EACRtB,aAAc,EACd8B,UAAW,UACXC,cAAe,WAEjB,2DAA4D,CAC1DC,OAAQ,WAEVC,SAAU,CACRX,OAAQ,EACRpB,QAAS,EACTgC,SAAU,GAEZC,MAAO,CACLC,YAAa,UACbC,eAAgB,YAElBC,QAAS,CACPR,UAAW,SAIFS,EAAwB1C,EAAUqB,kBDOT,SAACsB,GAC7B,IAAAC,EAAuCD,WAA7BvC,EAA6BuC,WAAnBrC,EAAmBqC,QAATE,4UAASF,EAAzC,iCAEN,OACEG,MAAC7C,KAAaK,MAAOA,GAAWuC,GAAME,IAAK,CAAE3C,uBAC1CwC"}